# -*- coding: utf-8 -*-
"""COVID-19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PjIqCQYFJpDNu_57Vv8E4VUZhHl6CzlD
"""

# !pip install chart_studio
# !pip install pyecharts
# !pip install echarts-themes-pypkg
# !pip install selenium
# !pip install snapshot-selenium
# !pip install xmltodict

import requests
import xmltodict
import time
import pandas as pd
from pyecharts.globals import CurrentConfig, NotebookType
CurrentConfig.NOTEBOOK_TYPE = NotebookType.JUPYTER_LAB
from pyecharts.globals import ThemeType
from pyecharts.commons.utils import JsCode
from pyecharts.charts import Bar, Bar3D, Grid, Line, Liquid, Page, Pie, Timeline, Tab, Map, Grid
from pyecharts import options as opts
from pyecharts.render import make_snapshot
import snapshot_selenium.snapshot as driver
from selenium import webdriver

serviceKey='zTa2HPaDXF3mBGgFN1l0EkCP%2BOWRPIUmkAoGZeu8oQDco%2FUapbW7xPoDPCHaRGPP9A43rMTBBnljgtcas9rZxA%3D%3D'
pageNo='1'
numOfRows='10'
startCreateDt='20191230'
endCreateDt='20210714'
url ='http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson'
url=url+'?serviceKey='+serviceKey+"&pageNo="+pageNo+"&numOfRows=" +numOfRows+ "&startCreateDt="+startCreateDt + "&endCreateDt=" + endCreateDt
req=requests.get(url).text
#req2=requests.get(url).content

xmlObject=xmltodict.parse(req)
dict_data=xmlObject['response']['body']['items']['item']

df=pd.DataFrame(dict_data)

df

df = df.astype({'decideCnt' : 'int', 'examCnt' : 'int', 'deathCnt' : 'int'})

df = df.drop_duplicates(['stateDt']) #중복 일자 제거

df['date']=df['stateDt']
df['date'] = pd.to_datetime(df['date']) #날짜

df_2 = df[['date','decideCnt','examCnt','deathCnt']]
df_2 = df_2.sort_values(by='date') #날짜정렬

df_2['daily_decideCnt'] = df_2['decideCnt'].diff()

"""### 요약
 - requests : 데이터 받아오기
 - xmltodict : XML 데이터를 DataFrame으로 전환
 - DataFrame.diff() : 일별 누진 데이터를 일일 데이터로 변환

### 시각화
"""

df_2.plot('date', ['daily_decideCnt'])

df_2

"""### pyecharts 적용

#### 꺾은선 그래프 조정
"""

test_Covid19=(Line(init_opts=opts.InitOpts(theme=ThemeType.MACARONS,js_host="https://cdn.bootcdn.net/ajax/libs/echarts/5.1.2/"))
                     .add_xaxis(df_2['date'].unique().astype(str).tolist())
                     .add_yaxis('일일 확진자 수', df_2['daily_decideCnt'].tolist())        
                     ).set_global_opts(title_opts=opts.TitleOpts(title='COVID-19 일일확진자(대한민국)',pos_bottom="60%"),
                                legend_opts=opts.LegendOpts(pos_bottom="55%",pos_right="10%",legend_icon='pin'),
                                tooltip_opts=opts.TooltipOpts(trigger="axis", axis_pointer_type="cross"),
                                datazoom_opts=[
                        opts.DataZoomOpts(pos_bottom="65%",xaxis_index=2),
                        opts.DataZoomOpts(pos_bottom="35%", xaxis_index=1),
                        opts.DataZoomOpts(pos_bottom="3%", xaxis_index=0)
                      ]                 
                     ).set_series_opts(label_opts=opts.LabelOpts(is_show=False))

test_Covid19.render()

test_Covid19.load_javascript()

test_Covid19.render_notebook()

(Bar()
    .add_xaxis(["Microsoft", "Amazon", "IBM", "Oracl", "Google", "Alibaba"])
    .add_yaxis('2017-2018 Revenue in (billion $)', [21.2, 20.4, 10.3, 6.08, 4, 2.2])
    .set_global_opts(title_opts=opts.TitleOpts(title="Top cloud providers 2018", subtitle="2017-2018 Revenue"))
    .render() # generate a local HTML file
)

bar = (Bar(init_opts=opts.InitOpts(theme=ThemeType.MACARONS))
    .add_xaxis(["Microsoft", "Amazon", "IBM", "Oracl", "Google", "Alibaba"])
    .add_yaxis('2017-2018 Revenue in (billion $)', [21.2, 20.4, 10.3, 6.08, 4, 2.2])
    .set_global_opts(title_opts=opts.TitleOpts(title="Top cloud providers 2018", subtitle="2017-2018 Revenue"))
)
make_snapshot(driver, bar.render(), 'bar.png', browser='Safari')

bar = (Bar(init_opts=opts.InitOpts(theme=ThemeType.WESTEROS))
    .add_xaxis(["Microsoft", "Amazon", "IBM", "Oracl", "Google", "Alibaba"])
    .add_yaxis('2017-2018 Revenue in (billion $)', [21.2, 20.4, 10.3, 6.08, 4, 2.2])
    .set_global_opts(title_opts=opts.TitleOpts(title="Top cloud providers 2018", subtitle="2017-2018 Revenue"))
)
make_snapshot(driver, bar.render(), 'bar.png', browser='Safari')

## 드디어 성공... ㅠㅠ
bar =(Line(init_opts=opts.InitOpts(theme=ThemeType.MACARONS,js_host="https://cdn.bootcdn.net/ajax/libs/echarts/5.1.2/"))
                     .add_xaxis(df_2['date'].unique().astype(str).tolist())
                     .add_yaxis('일일 확진자 수', df_2['daily_decideCnt'].tolist())        
                     ).set_global_opts(title_opts=opts.TitleOpts(title='COVID-19 일일확진자(대한민국)',pos_bottom="70%",pos_left="15%"),
                                legend_opts=opts.LegendOpts(pos_bottom="55%",pos_right="10%",legend_icon='pin'),
                                tooltip_opts=opts.TooltipOpts(trigger="axis", axis_pointer_type="cross"),
                                datazoom_opts=[
                        opts.DataZoomOpts(pos_bottom="65%",xaxis_index=2),
                        opts.DataZoomOpts(pos_bottom="35%", xaxis_index=1),
                        opts.DataZoomOpts(pos_bottom="3%", xaxis_index=0)
                      ]                 
                     ).set_series_opts(label_opts=opts.LabelOpts(is_show=False))
make_snapshot(driver, bar.render(), 'bar.png', browser='Safari')